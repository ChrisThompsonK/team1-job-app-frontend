{% extends "layouts/base.njk" %}
{% set currentPage = "job-roles" %}
{% block title %}
    {{ title }}
{% endblock %}
{% block external_styles %}
    <link href="https://cdn.jsdelivr.net/npm/daisyui@4.12.10/dist/full.min.css" rel="stylesheet" type="text/css"/>
    <script src="https://cdn.tailwindcss.com"></script>
{% endblock %}
{% block styles %}
    <link rel="stylesheet" href="/css/job-roles.css">
    {% endblock %}
    {% block body_attributes %}
        class="job-roles-page"{% endblock %}
    {% block navigation %}
        <!-- Custom navigation for job roles page with DaisyUI styling -->
        <div class="navbar bg-primary text-primary-content">
            <div class="container mx-auto">
                <div class="flex-1">
                    <a class="btn btn-ghost text-xl" href="/">Job Application System</a>
                </div>
                <div class="flex-none">
                    <ul class="menu menu-horizontal px-1">
                        <li>
                            <a href="/" class="hover:bg-primary-focus">Home</a>
                        </li>
                        <li>
                            <a href="/job-roles" class="bg-primary-focus">Job Roles</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    {% endblock %}
    {% block main_attributes %}
        class="container mx-auto px-4 py-8"{% endblock %}
    {% block content %}
        <!-- Page Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-base-content mb-2">{{ title }}</h1>
            <p class="text-base-content/70">Explore exciting career opportunities</p>
            
            <!-- Admin Add Button -->
            <div class="mt-6">
                <button class="btn btn-primary btn-lg gap-2" title="Add New Job Role">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                    Add Job Role
                </button>
            </div>
        </div>

        <!-- Search and Filter Controls -->
        <div class="bg-base-100 rounded-lg shadow-md p-6 mb-8">
            <div class="space-y-4">
                <!-- Search Bar -->
                <div class="form-control w-full">
                    <label class="label">
                        <span class="label-text font-semibold">Search Job Roles</span>
                    </label>
                    <div class="relative">
                        <input 
                            type="text" 
                            placeholder="Search by job title..." 
                            class="input input-bordered input-primary w-full pl-10" 
                            id="searchInput"
                        />
                        <svg class="w-5 h-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-base-content/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </div>
                </div>

                <!-- Filter Controls -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    <!-- Capability Filter -->
                    <div class="form-control w-full">
                        <label class="label">
                            <span class="label-text font-semibold">Capability</span>
                        </label>
                        <select class="select select-bordered select-primary w-full" id="capabilityFilter">
                            <option value="">All Capabilities</option>
                            <option value="Data">Data</option>
                            <option value="Workday">Workday</option>
                            <option value="Engineering">Engineering</option>
                        </select>
                    </div>

                    <!-- Band Filter -->
                    <div class="form-control w-full">
                        <label class="label">
                            <span class="label-text font-semibold">Band</span>
                        </label>
                        <select class="select select-bordered select-primary w-full" id="bandFilter">
                            <option value="">All Bands</option>
                            <option value="E1">E1</option>
                            <option value="E2">E2</option>
                            <option value="E3">E3</option>
                            <option value="E4">E4</option>
                            <option value="E5">E5</option>
                        </select>
                    </div>

                    <!-- Location Filter -->
                    <div class="form-control w-full">
                        <label class="label">
                            <span class="label-text font-semibold">Location</span>
                        </label>
                        <select class="select select-bordered select-primary w-full" id="locationFilter">
                            <option value="">All Locations</option>
                            <!-- These will be populated dynamically based on available job locations -->
                            <option value="London">London</option>
                            <option value="Belfast">Belfast</option>
                            <option value="Birmingham">Birmingham</option>
                            <option value="Remote">Remote</option>
                        </select>
                    </div>

                    <!-- Status Filter -->
                    <div class="form-control w-full">
                        <label class="label">
                            <span class="label-text font-semibold">Status</span>
                        </label>
                        <select class="select select-bordered select-primary w-full" id="statusFilter">
                            <option value="">All Statuses</option>
                            <option value="Open">Open</option>
                            <option value="Closed">Closed</option>
                        </select>
                    </div>
                </div>

                <!-- Filter Actions -->
                <div class="flex flex-wrap gap-2 justify-between items-center pt-4">
                    <div class="flex gap-2">
                        <button class="btn btn-outline btn-secondary" id="clearFilters">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                            Clear Filters
                        </button>
                    </div>
                    <div class="text-sm text-base-content/60" id="resultsCount">
                        <!-- Results count will be updated here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Job Roles Grid -->
        {% if jobRoles and jobRoles.length > 0 %}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="jobRolesGrid">
                {% for job in jobRoles %}
                    <div class="card bg-base-200 shadow-lg hover:shadow-xl transition-shadow duration-300 job-card" 
                         data-job-name="{{ job.name | lower }}"
                         data-job-capability="{{ job.capability }}"
                         data-job-band="{{ job.band }}"
                         data-job-location="{{ job.location }}"
                         data-job-status="{{ job.status }}">
                        <div
                            class="card-body">
                            <!-- Job Title -->
                            <h2 class="card-title text-xl font-semibold text-primary">
                                {{ job.name }}
                            </h2>
                            <!-- Job Details -->
                            <div
                                class="space-y-3 mt-4">
                                <!-- Location -->
                                <div class="flex items-center gap-2">
                                    <svg class="w-5 h-5 text-base-content/60" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    <span class="text-base-content/80">{{ job.location }}</span>
                                </div>
                                <!-- Capability Badge -->
                                <div class="flex items-center gap-2">
                                    <svg class="w-5 h-5 text-base-content/60" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1
                                                1 0 011 1v5m-4 0h4"></path>
                                    </svg>
                                    <span class="badge badge-secondary">{{ job.capability }}</span>
                                </div>
                                <!-- Band -->
                                <div class="flex items-center gap-2">
                                    <svg class="w-5 h-5 text-base-content/60" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138
                                                3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0
                                                00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42
                                                3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
                                    </svg>
                                    <span class="text-base-content/80">Band:
                                        <span class="font-semibold">{{ job.band }}</span>
                                    </span>
                                </div>
                                <!-- Closing Date -->
                                <div class="flex items-center gap-2">
                                    <svg class="w-5 h-5 text-base-content/60" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    <span class="text-base-content/80">
                                        Closes:
                                        <span class="font-semibold">{{ job.closingDate.toLocaleDateString() }}</span>
                                    </span>
                                </div>
                            </div>
                            <!-- Action Buttons -->
                            <div class="card-actions justify-end mt-6 gap-2">
                                <button class="btn btn-sm btn-outline btn-warning" title="Edit Job Role">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                    </svg>
                                    Edit
                                </button>
                                <button class="btn btn-sm btn-outline btn-error" title="Delete Job Role">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                    Delete
                                </button>
                                <a href="/job-roles/{{ job.id }}" class="btn btn-primary btn-sm">
                                    View Details
                                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                    </svg>
                                </a>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <!-- Empty State -->
            <div class="text-center py-16">
                <div class="max-w-md mx-auto">
                    <svg class="w-16 h-16 mx-auto text-base-content/30 mb-4" fill="none" stroke="currentColor" viewbox="0 0 24 24">
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 00-2
                                2H10a2 2 0 00-2-2V6m8 0h2a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V8a2 2 0 012-2h2"></path>
                    </svg>
                    <h3 class="text-xl font-semibold text-base-content mb-2">No Job Roles Available</h3>
                    <p class="text-base-content/60">There are currently no job roles to display. Please check back later.</p>
                </div>
            </div>
        {% endif %}

        <!-- JavaScript for Search and Filtering -->
        <script>
            // DOM Elements
            const searchInput = document.getElementById('searchInput');
            const capabilityFilter = document.getElementById('capabilityFilter');
            const bandFilter = document.getElementById('bandFilter');
            const locationFilter = document.getElementById('locationFilter');
            const statusFilter = document.getElementById('statusFilter');
            const clearFiltersBtn = document.getElementById('clearFilters');
            const resultsCount = document.getElementById('resultsCount');
            const jobRolesGrid = document.getElementById('jobRolesGrid');

            // Get all job cards
            let allJobCards = [];
            let filteredJobCards = [];

            // Initialize the filtering system
            function initializeFiltering() {
                allJobCards = Array.from(document.querySelectorAll('.job-card'));
                filteredJobCards = [...allJobCards];
                updateResultsCount();
                populateLocationFilter();
            }

            // Populate location filter with unique locations from job data
            function populateLocationFilter() {
                const locations = new Set();
                allJobCards.forEach(card => {
                    const location = card.getAttribute('data-job-location');
                    if (location) locations.add(location);
                });

                // Clear existing options except "All Locations"
                locationFilter.innerHTML = '<option value="">All Locations</option>';
                
                // Add unique locations
                Array.from(locations).sort().forEach(location => {
                    const option = document.createElement('option');
                    option.value = location;
                    option.textContent = location;
                    locationFilter.appendChild(option);
                });
            }

            // Filter job cards based on current filter values
            function filterJobs() {
                const searchTerm = searchInput.value.toLowerCase().trim();
                const selectedCapability = capabilityFilter.value;
                const selectedBand = bandFilter.value;
                const selectedLocation = locationFilter.value;
                const selectedStatus = statusFilter.value;

                filteredJobCards = allJobCards.filter(card => {
                    // Search filter (job name)
                    const jobName = card.getAttribute('data-job-name') || '';
                    const matchesSearch = !searchTerm || jobName.includes(searchTerm);

                    // Capability filter
                    const jobCapability = card.getAttribute('data-job-capability') || '';
                    const matchesCapability = !selectedCapability || jobCapability === selectedCapability;

                    // Band filter
                    const jobBand = card.getAttribute('data-job-band') || '';
                    const matchesBand = !selectedBand || jobBand === selectedBand;

                    // Location filter
                    const jobLocation = card.getAttribute('data-job-location') || '';
                    const matchesLocation = !selectedLocation || jobLocation === selectedLocation;

                    // Status filter
                    const jobStatus = card.getAttribute('data-job-status') || '';
                    const matchesStatus = !selectedStatus || jobStatus === selectedStatus;

                    return matchesSearch && matchesCapability && matchesBand && matchesLocation && matchesStatus;
                });

                // Show/hide job cards
                allJobCards.forEach(card => {
                    if (filteredJobCards.includes(card)) {
                        card.style.display = 'block';
                        card.classList.remove('hidden');
                    } else {
                        card.style.display = 'none';
                        card.classList.add('hidden');
                    }
                });

                updateResultsCount();
                showEmptyState();
            }

            // Update results counter
            function updateResultsCount() {
                const count = filteredJobCards.length;
                const total = allJobCards.length;
                
                if (count === total) {
                    resultsCount.textContent = `Showing all ${total} job role${total !== 1 ? 's' : ''}`;
                } else {
                    resultsCount.textContent = `Showing ${count} of ${total} job role${total !== 1 ? 's' : ''}`;
                }
            }

            // Show empty state when no jobs match filters
            function showEmptyState() {
                const existingEmptyState = document.getElementById('emptyFilterState');
                
                if (filteredJobCards.length === 0) {
                    if (!existingEmptyState) {
                        const emptyState = document.createElement('div');
                        emptyState.id = 'emptyFilterState';
                        emptyState.className = 'col-span-full text-center py-16';
                        emptyState.innerHTML = `
                            <div class="max-w-md mx-auto">
                                <svg class="w-16 h-16 mx-auto text-base-content/30 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                                <h3 class="text-xl font-semibold text-base-content mb-2">No Jobs Found</h3>
                                <p class="text-base-content/60 mb-4">No job roles match your current search and filter criteria.</p>
                                <button class="btn btn-primary btn-sm" onclick="clearAllFilters()">Clear All Filters</button>
                            </div>
                        `;
                        jobRolesGrid.appendChild(emptyState);
                    }
                } else {
                    if (existingEmptyState) {
                        existingEmptyState.remove();
                    }
                }
            }

            // Clear all filters
            function clearAllFilters() {
                searchInput.value = '';
                capabilityFilter.value = '';
                bandFilter.value = '';
                locationFilter.value = '';
                statusFilter.value = '';
                filterJobs();
            }

            // Debounce function for search input
            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            // Event Listeners
            clearFiltersBtn.addEventListener('click', clearAllFilters);

            // Real-time search
            const debouncedFilter = debounce(filterJobs, 300);
            searchInput.addEventListener('input', debouncedFilter);

            // Real-time filter changes
            capabilityFilter.addEventListener('change', filterJobs);
            bandFilter.addEventListener('change', filterJobs);
            locationFilter.addEventListener('change', filterJobs);
            statusFilter.addEventListener('change', filterJobs);

            // Initialize on page load
            document.addEventListener('DOMContentLoaded', initializeFiltering);
        </script>
    {% endblock %}