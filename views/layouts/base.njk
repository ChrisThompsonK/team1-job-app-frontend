<!DOCTYPE html>
<html lang="{% block lang %}{{ currentLanguage or 'en' }}{% endblock %}" data-theme="light">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>
            {% block title %}{{ t('nav.siteTitle') }}{% endblock %}
        </title>
        <!-- Base CSS -->
        <link
        rel="stylesheet" href="/css/style.css">
        <!-- Page-specific CSS -->
        {% block styles %}{% endblock %}
        <!-- External CSS libraries -->
        {% block external_styles %}{% endblock %}
    </head>
    <body {% block body_attributes %} {% endblock %}>
        {% block navigation %}
            <!-- Daisy UI Navigation -->
            <div class="navbar bg-primary text-primary-content">
                <div class="navbar-start">
                    <div class="dropdown">
                        <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewbox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16"/>
                            </svg>
                        </div>
                        <ul
                            tabindex="0"
                            class="menu menu-sm dropdown-content bg-base-100 text-base-content rounded-box z-[1] mt-3 w-52 p-2 shadow">
                            <li>
                                <a href="/" class="{% if currentPage === 'home' %}active{% endif %}">{{ t('nav.home') }}</a>
                            </li>
                            <li>
                                <a href="/job-roles" class="{% if currentPage === 'job-roles' %}active{% endif %}">{{ t('nav.jobRoles') }}</a>
                            </li>
                        </ul>
                    </div>
                    <a href="/" class="btn btn-ghost text-xl">
                        <img src="/images/kainos-logo.png" alt="Kainos Logo" class="h-8">
                        <span class="ml-2">{{ t('nav.siteTitle') }}</span>
                    </a>
                </div>
                <div class="navbar-center hidden lg:flex">
                    <ul class="menu menu-horizontal px-1">
                        <li>
                            <a href="/" class="{% if currentPage === 'home' %}active{% endif %}">{{ t('nav.home') }}</a>
                        </li>
                        <li>
                            <a href="/job-roles" class="{% if currentPage === 'job-roles' %}active{% endif %}">{{ t('nav.jobRoles') }}</a>
                        </li>
                    </ul>
                </div>
                <div class="navbar-end gap-2">
                    <!-- Text Size Selector -->
                    <div class="dropdown dropdown-end">
                        <div tabindex="0" role="button" class="btn btn-ghost btn-circle" aria-label="{{ t('nav.changeTextSize') }}">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"/>
                            </svg>
                        </div>
                        <ul tabindex="0" class="menu menu-sm dropdown-content bg-base-100 text-base-content rounded-box z-[1] mt-3 w-40 p-2 shadow">
                            <li><a href="#" onclick="changeTextSize('small')" class="text-sm" data-size="small">{{ t('nav.textSize.small') }}</a></li>
                            <li><a href="#" onclick="changeTextSize('medium')" class="text-base" data-size="medium">{{ t('nav.textSize.medium') }}</a></li>
                            <li><a href="#" onclick="changeTextSize('large')" class="text-lg" data-size="large">{{ t('nav.textSize.large') }}</a></li>
                            <li><a href="#" onclick="changeTextSize('x-large')" class="text-xl" data-size="x-large">{{ t('nav.textSize.xLarge') }}</a></li>
                        </ul>
                    </div>

                    <!-- Language Selector -->
                    <div class="dropdown dropdown-end">
                        <div tabindex="0" role="button" class="btn btn-ghost btn-circle" aria-label="{{ t('nav.changeLanguage') }}">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"/>
                            </svg>
                        </div>
                        <ul tabindex="0" class="menu menu-sm dropdown-content bg-base-100 text-base-content rounded-box z-[1] mt-3 w-32 p-2 shadow">
                            <li><a href="#" onclick="changeLanguage('en')" class="{% if currentLanguage === 'en' %}active{% endif %}">ðŸ‡¬ðŸ‡§ English</a></li>
                            <li><a href="#" onclick="changeLanguage('es')" class="{% if currentLanguage === 'es' %}active{% endif %}">ðŸ‡ªðŸ‡¸ EspaÃ±ol</a></li>
                            <li><a href="#" onclick="changeLanguage('fr')" class="{% if currentLanguage === 'fr' %}active{% endif %}">ðŸ‡«ðŸ‡· FranÃ§ais</a></li>
                            <li><a href="#" onclick="changeLanguage('pl')" class="{% if currentLanguage === 'pl' %}active{% endif %}">ðŸ‡µðŸ‡± Polski</a></li>
                        </ul>
                    </div>
                    
                    <!-- Theme Toggle Button -->
                    <label class="swap swap-rotate btn btn-ghost btn-circle" aria-label="{{ t('nav.toggleTheme') }}">
                        <!-- Hidden checkbox controls the state -->
                        <input type="checkbox" id="theme-toggle" class="theme-controller" value="dark"/>
                        <!-- Sun icon (light mode) -->
                        <svg class="swap-off fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                            <path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z"/>
                        </svg>
                        <!-- Moon icon (dark mode) -->
                        <svg class="swap-on fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                            <path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z"/>
                        </svg>
                    </label>
                </div>
            </div>
        {% endblock %}
        <main {% block main_attributes %} {% endblock %}> {% block content %}{% endblock %}
            </main>
            {% block footer %}
                <!-- Daisy UI Footer -->
                <footer class="footer footer-center p-10 bg-base-200 text-base-content mt-16">
                    <div>
                        <p class="text-sm">{{ t('footer.copyright') }}</p>
                    </div>
                </footer>
            {% endblock %}
            <!-- Theme Toggle Script -->
            <script>
                // Get theme from localStorage or default to 'light'
                const currentTheme = localStorage.getItem('theme') || 'light';
                
                // Set initial theme
                document.documentElement.setAttribute('data-theme', currentTheme);
                
                // Set checkbox state based on current theme
                const themeToggle = document.getElementById('theme-toggle');
                if (themeToggle) {
                    themeToggle.checked = (currentTheme === 'dark');
                    
                    // Add event listener for theme toggle
                    themeToggle.addEventListener('change', function() {
                        const newTheme = this.checked ? 'dark' : 'light';
                        document.documentElement.setAttribute('data-theme', newTheme);
                        localStorage.setItem('theme', newTheme);
                    });
                }

                // Text size functionality
                const currentTextSize = localStorage.getItem('textSize') || 'medium';
                
                // Set initial text size
                document.documentElement.setAttribute('data-text-size', currentTextSize);
                
                // Update active state for text size menu items
                function updateTextSizeMenu() {
                    const currentSize = localStorage.getItem('textSize') || 'medium';
                    document.querySelectorAll('[data-size]').forEach(item => {
                        const link = item;
                        if (link.dataset.size === currentSize) {
                            link.parentElement.classList.add('active');
                        } else {
                            link.parentElement.classList.remove('active');
                        }
                    });
                }
                
                // Text size change function
                function changeTextSize(size) {
                    document.documentElement.setAttribute('data-text-size', size);
                    localStorage.setItem('textSize', size);
                    updateTextSizeMenu();
                }
                
                // Initialize text size menu on load
                document.addEventListener('DOMContentLoaded', updateTextSizeMenu);
                
                // Language change function
                function changeLanguage(language) {
                    fetch('/change-language', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ language: language })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Reload the page to apply new language
                            window.location.reload();
                        }
                    })
                    .catch(error => console.error('Error changing language:', error));
                }
            </script>
            
            <!-- Page-specific JavaScript -->
            {% block scripts %}{% endblock %}
        </body>
    </html>
</html>