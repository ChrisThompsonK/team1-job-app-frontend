{% extends "layouts/base.njk" %}
{% set currentPage = "profile" %}
{% block title %}
  User Profile - {{ t('nav.siteTitle') }}
{% endblock %}
{% block content %}
  <div
    class="container mx-auto px-4 py-8">
    <!-- Page Header -->
    <div class="text-center mb-8">
      <div class="inline-flex items-center justify-center w-20 h-20 bg-primary/10 rounded-full mb-4">
        <i data-lucide="user" class="h-10 w-10 text-primary"></i>
      </div>
      <h1 class="text-4xl font-bold text-primary mb-2">User Profile</h1>
      <p class="text-base-content/70 text-lg">Welcome back, {{ user.name or 'User' }}!</p>
    </div>
    <!-- Profile Content -->
    <div class="max-w-2xl mx-auto">
      <div class="card bg-base-100 shadow-lg">
        <div class="card-body">
          <h2 class="card-title text-primary mb-6">
            <i data-lucide="info" class="h-6 w-6"></i>
            Profile Information
          </h2>
          <!-- User Information Grid -->
          <div
            class="grid gap-6">
            <!-- Name -->
            <div class="form-control">
              <label class="label">
                <span class="label-text font-semibold">Full Name</span>
              </label>
              <div class="flex items-center gap-3 p-4 bg-base-200 rounded-lg">
                <i data-lucide="user" class="h-5 w-5 text-primary"></i>
                <span class="text-base-content">{{ user.name or 'N/A' }}</span>
              </div>
            </div>
            <!-- Email -->
            <div class="form-control">
              <label class="label">
                <span class="label-text font-semibold">Email Address</span>
              </label>
              <div class="flex items-center gap-3 p-4 bg-base-200 rounded-lg">
                <i data-lucide="mail" class="h-5 w-5 text-primary"></i>
                <span class="text-base-content">{{ user.email or 'N/A' }}</span>
                {% if user.emailVerified %}
                  <div class="badge badge-success badge-sm gap-1">
                    <i data-lucide="check" class="h-3 w-3"></i>
                    Verified
                  </div>
                {% else %}
                  <div class="badge badge-warning badge-sm gap-1">
                    <i data-lucide="alert-circle" class="h-3 w-3"></i>
                    Unverified
                  </div>
                {% endif %}
              </div>
            </div>
            {% if user.createdAt %}
              <!-- Account Creation Date -->
              <div class="form-control">
                <label class="label">
                  <span class="label-text font-semibold">Member Since</span>
                </label>
                <div class="flex items-center gap-3 p-4 bg-base-200 rounded-lg">
                  <i data-lucide="calendar" class="h-5 w-5 text-primary"></i>
                  <span class="text-base-content" id="created-date">
                    {{ user.createdAt }}
                  </span>
                </div>
              </div>
            {% endif %}
            {% if user.updatedAt %}
              <!-- Last Updated -->
              <div class="form-control">
                <label class="label">
                  <span class="label-text font-semibold">Last Updated</span>
                </label>
                <div class="flex items-center gap-3 p-4 bg-base-200 rounded-lg">
                  <i data-lucide="clock" class="h-5 w-5 text-primary"></i>
                  <span class="text-base-content" id="updated-date">
                    {{ user.updatedAt }}
                  </span>
                </div>
              </div>
            {% endif %}
          </div>
          <!-- Action Buttons -->
          <div class="card-actions justify-end mt-8">
            <button class="btn btn-outline gap-2" onclick="editProfile()">
              <i data-lucide="edit" class="h-4 w-4"></i>
              Edit Profile
            </button>
            <button class="btn btn-error gap-2" onclick="showLogoutModal()">
              <i data-lucide="log-out" class="h-4 w-4"></i>
              Logout
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Logout Confirmation Modal -->
  <dialog id="logout-modal" class="modal">
    <div class="modal-box">
      <h3 class="font-bold text-lg mb-4">
        <i data-lucide="log-out" class="h-5 w-5 inline mr-2 text-error"></i>
        Confirm Logout
      </h3>
      <p class="py-4">Are you sure you want to logout? You will need to sign in again to access your account.</p>
      <div class="modal-action">
        <button class="btn btn-outline" onclick="closeLogoutModal()">Cancel</button>
        <button class="btn btn-error" onclick="confirmLogout()">
          <i data-lucide="log-out" class="h-4 w-4"></i>
          Logout
        </button>
      </div>
    </div>
    <form method="dialog" class="modal-backdrop">
      <button onclick="closeLogoutModal()">close</button>
    </form>
  </dialog>
</div></div><!-- Quick Actions --><div class="mt-8">
<h3 class="text-xl font-semibold text-primary mb-4">Quick Actions</h3>
<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
  <a href="/job-roles" class="card bg-base-100 shadow hover:shadow-lg transition-shadow">
    <div class="card-body">
      <div class="flex items-center gap-3">
        <i data-lucide="briefcase" class="h-6 w-6 text-primary"></i>
        <div>
          <h4 class="font-semibold">Browse Job Roles</h4>
          <p class="text-sm text-base-content/70">
            Explore available positions
          </p>
        </div>
      </div>
    </div>
  </a>
  <div class="card bg-base-100 shadow hover:shadow-lg transition-shadow cursor-pointer" onclick="viewApplications()">
    <div class="card-body">
      <div class="flex items-center gap-3">
        <i data-lucide="file-text" class="h-6 w-6 text-primary"></i>
        <div>
          <h4 class="font-semibold">My Applications</h4>
          <p class="text-sm text-base-content/70">
            View application status
          </p>
        </div>
      </div>
    </div>
  </div>
</div></div></div></div><!-- JavaScript for profile actions --><script>function editProfile() { // TODO: Implement profile editing
  alert('Profile editing feature coming soon!');
}
function showLogoutModal() {
  document.getElementById('logout-modal').showModal();
}
function closeLogoutModal() {
  document.getElementById('logout-modal').close();
}
async function confirmLogout() { // Close the modal first
  closeLogoutModal();
  try { // Call our server logout endpoint (which will forward cookies to external API)
    const response = await fetch('/auth/logout', {
      method: 'POST',
      credentials: 'include', // Include our session cookies
      headers: {
        'Content-Type': 'application/json'
      }
    });
    // Redirect to login regardless of response
    window.location.href = '/login';
  } catch (error) { // Even if logout fails, redirect to login
    window.location.href = '/login';
  }
}
function viewApplications() { // TODO: Implement applications view
  alert('Applications view coming soon!');
}
// Format dates when page loads
document.addEventListener('DOMContentLoaded', function () {
  const createdDateElement = document.getElementById('created-date');
  const updatedDateElement = document.getElementById('updated-date');
  if (createdDateElement && createdDateElement.textContent.trim()) {
    try {
      const createdDate = new Date(createdDateElement.textContent.trim());
      if (!isNaN(createdDate.getTime())) {
        createdDateElement.textContent = createdDate.toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });
      }
    } catch (error) {
      console.error('Error formatting created date:', error);
    }
  }
  if (updatedDateElement && updatedDateElement.textContent.trim()) {
    try {
      const updatedDate = new Date(updatedDateElement.textContent.trim());
      if (!isNaN(updatedDate.getTime())) {
        updatedDateElement.textContent = updatedDate.toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        }) + ' at ' + updatedDate.toLocaleTimeString('en-US', {
          hour: '2-digit',
          minute: '2-digit'
        });
      }
    } catch (error) {
      console.error('Error formatting updated date:', error);
    }
  }
});</script>{% endblock %}